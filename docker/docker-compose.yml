version: '3'
services:
  mongodb:
    image: mongo
    container_name: network-dev-mongodb   
    ports:
      - "${PORT_MONGODB_HOST}:${PORT_MONGODB_CONTAINER}"
    restart: unless-stopped       
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
    volumes:
      - ${MONGO_DATA_VOLUME_PATH_HOST}:${MONGO_DATA_VOLUME_PATH_CONTAINER}
    networks:
       network-dev:
        ipv4_address: ${IP_MONGODB}
      
  mongo-express:
    image: mongo-express
    container_name: network-dev-mongo-express    
    ports:
      - "8080:8081"
    restart: unless-stopped       
    networks:
      - network-dev
    depends_on:
      mongodb:
        condition: service_started
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ADMIN_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ADMIN_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${MONGO_ADMIN_SERVER}

  redis:
    image: redis:6.2-alpine
    restart: always
    networks:
      - network-dev
    ports:
      - '${REDIS_PORT_HOST}:${REDIS_PORT_CONTAINER}'
    command: redis-server --save 20 1 --loglevel ${REDIS_LOG_LEVEL} --requirepass ${REDIS_PASSWORD}
    volumes: 
      - ${REDIS_DATA_VOLUME_PATH_HOST}:${REDIS_DATA_VOLUME_PATH_CONTAINER}

networks:
  network-dev:
    name: network-dev
    ipam:
      driver: default
      config:
        - subnet: ${MASK_MONGODB}